<?xml version="1.0" encoding="UTF-8" ?> <!-- '매핑된 SQL 문 탐색' 위 4줄 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MenuMapper">

    <!-- comment. 우리가 JDBC를 사용해서 전체 조회 했을 때
            수많은 코드(setter와 getter)를 이용하여 힘들게 객체 값을 집어 넣었다.
            하지만, MyBatis는 JDBC를 더욱 간편하게 사용할 수 있게 해주는 프레임 워크이다.
            이러한 하드 코딩 문제를 resultMap으로 해결 가능하다. -->

    <!-- resultMap이란 결과를 매핑한다. : 데이터베이스에 컬럼에 해당하는 값과 필드값을 매칭시켜준다. -->
    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xmlconfig.model.dto.MenuDTO"> <!-- id와 type 설정하기 -->
        <!-- DB상에 PK는 ID로 표기 / DB상에 PK 이외엔 result로 표기 -->
        <id property="menuCode" column="MENU_CODE"/> <!-- property : DTO의 필드 작성, column : DB상 컬럼 -->
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>

    </resultMap>

    <select id="selectAllMenu" resultMap="menuResultMap"> <!-- 위에 resultMap에 id를 두 번째 인서트로 삽입 -->
        SELECT
             MENU_CODE
            ,MENU_NAME
            ,MENU_PRICE
            ,CATEGORY_CODE
            ,ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        ORDER BY
            MENU_CODE
    </select>

    <!-- DAO, selectMenuByMenuCode 메서드 참고 -->
    <select id="selectMenuByMenuCode" parameterType="_int" resultMap="menuResultMap">
        SELECT  <!-- parameterType 입력 후, DTO에 보내줘야 하므로 위와 같이 바인딩 작업 필요 (resultMap 기입) -->
             MENU_CODE
            ,MENU_NAME
            ,MENU_PRICE
            ,CATEGORY_CODE
            ,ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        AND
            MENU_CODE = #{code}       <!-- #{변수명} 는 jdbc의 (placeholder) ? 와 같은 의미 -->
    </select>
    <!-- comment. insert, delete, update의 경우에는 DB에 영향을 미치게 되면 int형으로 결과 반환
          또한 파라미터로 전달된 newMenu를 DTO의 필드명으로 값을 바인딩 해줘야 함.-->
    <insert id="insertNewMenu" parameterType="com.ohgiraffers.section01.xmlconfig.model.dto.MenuDTO">
        INSERT INTO TBL_MENU                     <!-- MenuDTO 파일을 parameter(전달인자)로 받고 있다 -->
        (MENU_NAME, MENU_PRICE, CATEGORY_CODE, ORDERABLE_STATUS)
        VALUES
        (#{menuName} , #{menuPrice} , #{categoryCode} , 'Y') <!-- DTO 전역번수 변수명과 동일하게 작성 -->
                                    <!-- orderableStatus는 Y로 값을 고정 -->
    </insert>

    <update id="updateMenu" parameterType="com.ohgiraffers.section01.xmlconfig.model.dto.MenuDTO">
         UPDATE TBL_MENU
         SET
         MENU_NAME = #{menuName}
        ,MENU_PRICE = #{menuPrice}
        ,CATEGORY_CODE = #{categoryCode}
        WHERE
        MENU_CODE = #{menuCode} <!-- 하나의 값만 수정할 거기 때문에 MENU_CODE 가 menuCode인 애들만 수정하겠다. -->
    </update>
    <delete id="deleteMenu" parameterType="com.ohgiraffers.section01.xmlconfig.model.dto.MenuDTO">
        DELETE FROM TBL_MENU
        WHERE
        MENU_CODE = #{menuCode}

    </delete>
</mapper>